#pragma once

#include <vector>
#include <string>

/// Интерфейс приложения
/**
 * Проект представляет собой командный интерпретатор, который читает из
 * входного потока команды. За реализацию команд отвечают приложения ---
 * объекты классов, унаследованных от ```IApp```.
 * \see Console
 * */
class IApp {
    public:
        /** Статус, соответствующий успешному завершению приложения.
         * */
        static constexpr int STATUS_OK = 0;

        virtual ~IApp() {};

        /** \brief Запуск приложения
         * \param [in] args аргументы, разобранные командным интерпретатором
         * \return Статус. Если статус равен \ref STATUS_OK, приложение считается
         * успешно завершённым. Если в результате работы приложения произошла
         * ошибка, приложение возвращает иной код. Подробнее см. описания
         * конкретных приложений.
         * */
        virtual int exec(const std::vector<std::string>& args) = 0;

        /** По коду ошибки возвращает текстовое описание.
         * \param [in] statusCode код, который вернуло приложение
         * */
        virtual const char* getStatusCodeDescription(int statusCode) = 0;

        /** Возвращает текстовое описание приложения.
         * */
        virtual const char* getHelp() = 0;
};
